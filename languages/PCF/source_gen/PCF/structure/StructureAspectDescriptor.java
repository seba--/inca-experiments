package PCF.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptApp = createDescriptorForApp();
  /*package*/ final ConceptDescriptor myConceptExp = createDescriptorForExp();
  /*package*/ final ConceptDescriptor myConceptLambda = createDescriptorForLambda();
  /*package*/ final ConceptDescriptor myConceptToplevel = createDescriptorForToplevel();
  /*package*/ final ConceptDescriptor myConceptVar = createDescriptorForVar();
  private final LanguageConceptSwitch myConceptIndex;

  public StructureAspectDescriptor() {
    myConceptIndex = new LanguageConceptSwitch();
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptApp, myConceptExp, myConceptLambda, myConceptToplevel, myConceptVar);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myConceptIndex.index(id)) {
      case LanguageConceptSwitch.App:
        return myConceptApp;
      case LanguageConceptSwitch.Exp:
        return myConceptExp;
      case LanguageConceptSwitch.Lambda:
        return myConceptLambda;
      case LanguageConceptSwitch.Toplevel:
        return myConceptToplevel;
      case LanguageConceptSwitch.Var:
        return myConceptVar;
      default:
        return null;
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myConceptIndex.index(c);
  }

  private static ConceptDescriptor createDescriptorForApp() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PCF", "App", 0xac86cc34da041ceL, 0xbbbd42f64ff2e3efL, 0x1ca1eb7c5f5859f4L);
    b.class_(false, false, false);
    b.parent(0xac86cc34da041ceL, 0xbbbd42f64ff2e3efL, 0x1ca1eb7c5f5859f5L);
    b.origin("r:c2e5e24a-74d1-4c52-869b-1ee5a27bfdf8(PCF.structure)/2063189023720495604");
    b.aggregate("fun", 0x1ca1eb7c5f585a05L).target(0xac86cc34da041ceL, 0xbbbd42f64ff2e3efL, 0x1ca1eb7c5f5859f5L).optional(false).ordered(true).multiple(false).origin("2063189023720495621").done();
    b.aggregate("arg", 0x1ca1eb7c5f585a08L).target(0xac86cc34da041ceL, 0xbbbd42f64ff2e3efL, 0x1ca1eb7c5f5859f5L).optional(false).ordered(true).multiple(false).origin("2063189023720495624").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExp() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PCF", "Exp", 0xac86cc34da041ceL, 0xbbbd42f64ff2e3efL, 0x1ca1eb7c5f5859f5L);
    b.interface_();
    b.origin("r:c2e5e24a-74d1-4c52-869b-1ee5a27bfdf8(PCF.structure)/2063189023720495605");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLambda() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PCF", "Lambda", 0xac86cc34da041ceL, 0xbbbd42f64ff2e3efL, 0x1ca1eb7c5f585a13L);
    b.class_(false, false, false);
    b.parent(0xac86cc34da041ceL, 0xbbbd42f64ff2e3efL, 0x1ca1eb7c5f5859f5L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:c2e5e24a-74d1-4c52-869b-1ee5a27bfdf8(PCF.structure)/2063189023720495635");
    b.aggregate("body", 0x1ca1eb7c5f585a17L).target(0xac86cc34da041ceL, 0xbbbd42f64ff2e3efL, 0x1ca1eb7c5f5859f5L).optional(false).ordered(true).multiple(false).origin("2063189023720495639").done();
    b.alias("lambda");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForToplevel() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PCF", "Toplevel", 0xac86cc34da041ceL, 0xbbbd42f64ff2e3efL, 0x1ca1eb7c5f585a26L);
    b.class_(false, false, true);
    b.origin("r:c2e5e24a-74d1-4c52-869b-1ee5a27bfdf8(PCF.structure)/2063189023720495654");
    b.aggregate("exps", 0x1ca1eb7c5f585a27L).target(0xac86cc34da041ceL, 0xbbbd42f64ff2e3efL, 0x1ca1eb7c5f5859f5L).optional(true).ordered(true).multiple(true).origin("2063189023720495655").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVar() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("PCF", "Var", 0xac86cc34da041ceL, 0xbbbd42f64ff2e3efL, 0x1ca1eb7c5f5859edL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.parent(0xac86cc34da041ceL, 0xbbbd42f64ff2e3efL, 0x1ca1eb7c5f5859f5L);
    b.origin("r:c2e5e24a-74d1-4c52-869b-1ee5a27bfdf8(PCF.structure)/2063189023720495597");
    return b.create();
  }
}
